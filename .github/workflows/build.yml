name: build

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings

jobs:
  binary:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        os: [darwin]
        arch:
          - arm64

        include:
          - arch: arm64
            runner: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: tags
        run: git fetch --prune --unshallow --tags

      - name: Install toolchain
        run: |-
          rustup show active-toolchain

      - uses: Swatinem/rust-cache@v2

      # There appears to be an issue with getting 403s from github when trying to use binstall on macs. Manually install any required tools for the build.
      # - uses: cargo-bins/cargo-binstall@main
      # - uses: jdx/mise-action@v2
      #   with:
      #     experimental: true
      - uses: taiki-e/install-action@v2
        with:
          tool: just,git-cliff

      - name: build
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
        run: |
          just set-version build-binary

      - name: rename
        run: |-
          cp target/release/kuberift kuberift-${{ matrix.os }}-${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: kuberift-${{ matrix.os }}-${{ matrix.arch }}
          path: kuberift*
          retention-days: 1

  # The state of include/exclude in matrices is tough because we want to add the
  # runner to the matrix based on arch. Calling a sub-workflow allows for
  # code-reuse without having to deal with that added complexity.
  docker-linux-amd64:
    uses: ./.github/workflows/docker.yml
    permissions:
      packages: write
    with:
      os: linux
      arch: amd64
      runner: ubuntu-latest

  docker-linux-arm64:
    if: ${{ github.event_name != 'pull_request' }}
    uses: ./.github/workflows/docker.yml
    permissions:
      packages: write
    with:
      os: linux
      arch: arm64
      runner: buildjet-4vcpu-ubuntu-2204-arm

  helm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: tags
        run: git fetch --prune --unshallow --tags

      - uses: taiki-e/install-action@v2
        with:
          tool: git-cliff
      - uses: jdx/mise-action@v2
        with:
          experimental: true
          mise_toml: |
            [tools]
            helm = "latest"
            just = "latest"

      - name: helm
        run: |
          just set-version helm-build

      - uses: actions/upload-artifact@v4
        with:
          name: helm
          path: /tmp/chart/*
          retention-days: 1
